apply plugin: 'com.android.application'
def fabricKey = null
if (project.rootProject.file('local.properties').exists()) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    fabricKey = properties.getProperty('FABRIC_KEY')
}
if (fabricKey == null) {
    fabricKey = System.getenv("FABRIC_KEY")
}

if (fabricKey != null) {
    apply from: '../fabric.gradle'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "top.trumeet.mipush"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        resConfigs "zh", "en"
        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'x86'
        }

        manifestPlaceholders = [fabricKey: fabricKey == null ?
                "" : fabricKey]
        buildConfigField "String", "FABRIC_KEY", "\"" + fabricKey + "\""
        buildConfigField "String", "GIT_TAG", "\"" + rootProject.ext.gitTag + "\""
        // buildConfigField "boolean", "SNAPSHOT", "\"" + rootProject.ext.snapshot + "\""
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled false
            //shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    signingConfigs {
        debug {
            def locale = null
            def keystorePwd = null
            def alias = null
            def pwd = null
            if (project.rootProject.file('local.properties').exists()) {
                Properties properties = new Properties()
                properties.load(project.rootProject.file('local.properties').newDataInputStream())
                locale = properties.getProperty("KEY_LOCATE")
                keystorePwd = properties.getProperty("KEYSTORE_PASSWORD")
                alias = properties.getProperty("KEYSTORE_ALIAS")
                pwd = properties.getProperty("KEY_PASSWORD")
            }

            storeFile file(locale != null ? locale : project.rootProject.file(".yuuta.jks"))
            storePassword keystorePwd != null ?
                    keystorePwd : System.getenv("KEYSTORE_PASS")
            keyAlias alias != null ?
                    alias : System.getenv("ALIAS_NAME")
            keyPassword pwd != null ?
                    pwd : System.getenv("ALIAS_PASS")
        }
        release {
            // 满足下面两个条件时需要此配置
            // 1. Gradle版本 >= 2.14.1
            // 2. Android Gradle Plugin 版本 >= 2.2.0
            // 作用是只使用旧版签名，禁用V2版签名模式
            v2SigningEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

android.applicationVariants.all { variant ->
    String taskName = String.format("remove%sStubClasses", variant.name.capitalize())
    task "${taskName}" {
        doLast { delete "${buildDir}/intermediates/classes/${variant.name}" + "/android" }
    }
    variant.processJavaResources.dependsOn(taskName)
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation('com.github.Trumeet:SetupWizardLibCompat:0.3', {
        exclude group: 'com.android.support'
    })
    // Recycler
    implementation('me.drakeet.multitype:multitype:3.3.0', {
        exclude group: 'com.android.support'
    })
    // Support
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    // Preference
    implementation 'moe.shizuku.preference:preference:2.2.3'
    implementation 'moe.shizuku.preference:preference-switchcompat:2.2.3'
    implementation 'moe.shizuku.preference:preference-dialog-android:2.2.3'
    implementation 'moe.shizuku.preference:preference-simplemenu:2.2.3'
    // Common
    implementation project(':common')
    // Fabric
    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true
    }
    // Help
    implementation('moe.shizuku.support:helplib:1.1.0', {
        exclude group: 'moe.shizuku.preference'
        exclude group: 'com.android.support'
    })
    // RxJava & RxAndroid
    implementation ("io.reactivex.rxjava2:rxandroid:$rxAndroidVersion", {
        exclude group: 'com.android.support'
    })
    implementation ("io.reactivex.rxjava2:rxjava:$rxVersion", {
        exclude group: 'com.android.support'
    })
    // RxActivityResult
    implementation ('com.github.VictorAlbertos:RxActivityResult:0.4.5-2.x', {
        exclude group: 'com.android.support'
    })
    // RxPermissions
    implementation ('com.github.tbruyelle:rxpermissions:0.10.2', {
        exclude group: 'com.android.support'
    })
    // Work
    implementation "android.arch.work:work-runtime:$work_version"
}
