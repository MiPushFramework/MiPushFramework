// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.61'

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2'
        classpath 'io.fabric.tools:gradle:1.25.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
        maven { url 'https://dl.bintray.com/rikkaw/Libraries' }
        google()
        jcenter()
    }

    gradle.taskGraph.whenReady {
        tasks.each { task ->
            if (task.name.equals('mockableAndroidJar')) {
                task.enabled = false
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// Thanks to RikkaApps/Shizuku
def gitCommitId = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()

def majorVersion = 0
def minorVersion = 3
def buildVersion = 6
def currentVersionCode = (majorVersion + 1) * 200 + minorVersion * 20 + buildVersion

def baseVersionName = "${majorVersion}.${minorVersion}.${buildVersion}"

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

ext {

    supportLibraryVersion = '27.0.2'
    minSdkVersion = 21
    compileSdkVersion = 27
    targetSdkVersion = 27
    buildToolsVersion = "27.0.3"
    versionCode = currentVersionCode
    pushVersionCode = 7
    snapshot = false
    versionBase = "${baseVersionName}.${releaseTime()}.${gitCommitId}"
    versionName = snapshot ? versionBase + "-SNAPSHOT" : versionBase
    gitTag = versionName

    // RxJava
    rxVersion = "2.1.16"
    rxAndroidVersion = "2.0.2"
    // Work
    work_version = "1.0.0-alpha05"
}

task exportVersion(type: Exec) {
    commandLine 'sh'
    doLast {
        file("$projectDir/version.txt").text = """$versionName"""
        file("$projectDir/gitTag.txt").text = """$gitTag"""
    }
}
